# Use SQLite by default
#DB_ENGINE=django.db.backends.sqlite3
# Use SpatiaLite for spatial projects
#DB_ENGINE=django.contrib.gis.db.backends.spatialite
# Use regular Postgres in production
#DB_ENGINE=django.db.backends.postgresql_psycopg2
# Use PostGIS in production for spatial projects
#DB_ENGINE=django.contrib.gis.db.backends.postgis

# If using SQLite or SpatiaLite, you can set the path to the database here.
# If unset, this defaults to '../db/db.sqlite3'.
#DB_NAME=../db/db.sqlite3

# If using Postgres or PostGIS, set these
#POSTGRES_HOST=db
#POSTGRES_PORT=5432
#POSTGRES_DB=postgres
#POSTGRES_USER=postgres
#POSTGRES_PASSWORD=postgres

# SECRET_KEY can be generated with:
#   python -c 'from django.core.management import utils; print(utils.get_random_secret_key())'
SECRET_KEY='django-insecure-#8=34bnllv4$f0ln^#km#)5q7ov!e7p)@!%^1_cc_ediw2q=)0'
# Uncomment the below DEBUG line for dev environment
#DEBUG=true
# Set these to something sensible
SUPERUSER_USERNAME=root
SUPERUSER_PASSWORD=root
SUPERUSER_EMAIL=root@localhost
APP_PORT=8000
CSRF_TRUSTED_ORIGINS=http://localhost:$APP_PORT
ALLOWED_HOSTS=*

#TIME_ZONE=UTC

# By default, emails get sent to the local console
#EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
#EMAIL_BACKEND=django.core.mail.backends.filebased.EmailBackend
#EMAIL_FILE_PATH="/tmp/django-messages"
# To set up an SMTP server, set the following (only EMAIL_BACKEND is required)
#EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
#EMAIL_HOST=mail
#EMAIL_PORT=587
#EMAIL_HOST_USER=
#EMAIL_HOST_PASSWORD=
#EMAIL_USE_TLS=False
#EMAIL_USE_SSL=False
#EMAIL_TIMEOUT=None
#EMAIL_SSL_KEYFILE=None
#EMAIL_SSL_CERTFILE=None
#DEFAULT_FROM_EMAIL=webmaster@localhost
#SERVER_EMAIL=webmaster@localhost

#ADMINS="Jo Smith <jo@example.net>, Foo Bar <foo@example.com>"

#WAGTAIL_SITE_NAME="My Site"
#WAGTAILADMIN_BASE_URL="http://localhost:$APP_PORT"
